; Lisp-style comments also
(metadata :format-version "1.0.0")
(metadata :author "Jinwoo Kim")
(metadata :realizable true)

(declare-term-type E.Term)
(declare-term-type B.Term)

(synth-term max2 (
  (declare-var (et et1 et2) E.Term) 
  (declare-var (bt bt1 bt2) B.Term)
  
  (declare-var (x y r r1 r2) Int) ;Var names cannot start with numerals
  (declare-var rb Bool)
  
  (declare-nt E1 E.Term (E1.Sem E.Term Int Int Int))
  (declare-nt E2 E.Term (E2.Sem E.Term Int Int Int))
  (declare-nt B B.Term (B.Sem B.Term Int Int Bool))
  
  (declare-nt A E.Term (A.Sem E.Term Int Int Int))
  
  ((E et) (E.Sem et x y (! r :out))
    (x.Syn (= r x))
    (y.Syn (= r y))
    (0.Syn (= r 0))
    
    ((+.Syn (E et1) (A et2)) (and
      (E.Sem et1 x y r1)
      (A.Sem et2 x y r2)
      (= r (+ r1 r2))
    ))
    
    ((ITE.Syn (B bt1) (A et1) (A et2))
      (and
        (B.Sem bt1 x y rb)
        (= rb true)
        (A.Sem et1 x y r)
      )
      (and
        (B.Sem bt1 x y rb)
        (= rb false)
        (A.Sem et2 x y r)
      )
    )
  )
  
  ((A et) (A.Sem et x y r)
    (x.Syn (= r x))
    (y.Syn (= r y))
    (0.Syn (= r 0))
  )
  
  ((B bt) (B.Sem bt x y rb)
     (True.Syn (= rb true))
     (False.Syn (= rb false)) 
     (ND.Syn (= rb true) (= rb false))   
  )
))

(constraint (E.Sem max2 4 2 4))
(constraint (E.Sem max2 2 5 5))


